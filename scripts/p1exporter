#!/usr/bin/env python3
"""
A simple reader and Prometheus exporter to expose metric from Belgian/Dutch
digital smart meters over the P1 port.
"""
import logging
from os import getenv
from argparse import ArgumentParser, Namespace

from prometheus_client import start_http_server
from prometheus_client.core import REGISTRY

from p1exporter import P1Reader, P1Collector, CRCException


logging.basicConfig(
    format="ts=%(asctime)s level=%(levelname)s caller=%(name)s msg=%(message)s",
    datefmt="%Y-%m-%dT%H:%M:%S",
    level=logging.INFO,
)
logger = logging.getLogger(__name__)

# TODO
# - parametrize port and USB device


def main() -> None:
    """Main loop"""
    args = parse_args()
    collector = P1Collector()
    REGISTRY.register(collector)
    bind_adress, bind_port = args.bind_address.split(":")
    start_http_server(addr=bind_adress, port=int(bind_port))
    with P1Reader() as p1_reader:
        while True:
            try:
                telegram = p1_reader.read()
                logger.info(f"Got telegram with {len(telegram)} keys")
                collector.update(telegram)
            except CRCException as error:
                logger.warning(error)


def parse_args() -> Namespace:
    """Parse arguments"""
    parser = ArgumentParser()
    parser.add_argument(
        "--bind-address",
        default=getenv("P1_BIND_ADDRESS", "127.0.0.1:8080"),
        help="Bind address. Default 127.0.0.1:8080",
        metavar="IP_ADDRESS:PORT",
    )
    args = parser.parse_args()
    return args


if __name__ == "__main__":
    main()
